apply plugin: 'application'

sourceCompatibility = 1.8

if(!hasProperty('boxUsername') || !hasProperty('boxPassword')) {
    ant.fail('Maven WebDav usename or password not set: boxUsername/boxPassword')
}

repositories {
	maven {
		url 'https://dav.box.com/dav'
		credentials {
			username boxUsername
			password boxPassword
		}
	}
	mavenCentral()
}

application {
	mainClass = 'se.sunstone.msa.Runner'
}

run {
	args = ["C:\\Users\\erik\\OneDrive\\Jobb\\MSA\\Kod\\Projektkod\\msa_cumulus\\src\\main\\resources\\config.properties"]
}

startScripts {

	def cjcJar = 'C:/Program Files/Canto/Cumulus Java SDK/CumulusJC.jar'

	classpath = classpath.filter {
		File file ->
			!file.name.contains("cumulus-jc")
	}

	// Support closures to add an additional element to
	// CLASSPATH definition in the start script files.
	def configureClasspathVar = { findClasspath, pathSeparator, line ->

		// Looking for the line that starts with either CLASSPATH=
		// or set CLASSPATH=, defined by the findClasspath closure argument.
		line = line.replaceAll(~/^${findClasspath}=.*$/) { original ->

			// Get original line and append it
			// with the configuration directory.
			// Use specified path separator, which is different
			// for Windows or Unix systems.
			original += "${pathSeparator}${cjcJar}"
		}

	}

	def configureUnixClasspath = configureClasspathVar.curry('CLASSPATH', ':')
	def configureWindowsClasspath = configureClasspathVar.curry('set CLASSPATH', ';')

	// The default script content is generated and
	// with the doLast method we can still alter
	// the contents before the complete task ends.
	doLast {

		// Alter the start script for Unix systems.
		unixScript.text =
				unixScript
						.readLines()
						.collect(configureUnixClasspath)
						.join('\n')

		// Alter the start script for Windows systems.
		windowsScript.text =
				windowsScript
						.readLines()
						.collect(configureWindowsClasspath)
						.join('\r\n')

	}

}

jar {
	manifest {
		attributes(
				'Main-Class': 'se.sunstone.msa.Runner'
		)
	}
}

distributions {
	manager {
		distributionBaseName = 'manager-dist'
		contents {
			into("bin") {
				from "build/scripts"
				include "managerScript.bat"
			}

			into ("lib") {
				from ("build/libs") {
					include "manager.jar"
				}

				from ("build/dependencies")
			}

			into ("conf") {
				from "src/main/resources"
				include "config.properties"
				include "manager-logging.properties"
			}
		}
	}
}

dependencies {
	implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'

	implementation (
		'org.slf4j:slf4j-api:1.7.7',
		'org.slf4j:slf4j-log4j12:1.7.7',
		'se.sunstone.ext.cumulus:cumulus-jc:11.0.0'
	)

	implementation files('C:/Program Files/Canto/Cumulus Java SDK/CumulusJC.jar')
}

task managerJar(type: Jar, dependsOn: compileJava) {
	archiveName = "manager.jar"
	manifest {
		attributes "Main-Class": "se.sunstone.msa.Runner"
	}
	includeEmptyDirs = false
	from sourceSets.main.output.classesDirs
}

task managerScript(type: CreateStartScripts, dependsOn: managerJar) {
	mainClassName = "se.sunstone.msa.Runner"

	classpath = startScripts.classpath.filter {
		File file -> !file.name.contains("msa_cumulus")
	} + files("build/libs/manager.jar")

	outputDir = startScripts.outputDir
	applicationName = 'managerScript'
	defaultJvmOpts = ["-Xms1024m", "-Xmx2048m"]
}

task copyDependencies(type: Copy) {
	from configurations.default
	into "build/dependencies"
}

tasks.managerDistZip.dependsOn tasks.managerScript
tasks.managerDistTar.dependsOn tasks.managerScript